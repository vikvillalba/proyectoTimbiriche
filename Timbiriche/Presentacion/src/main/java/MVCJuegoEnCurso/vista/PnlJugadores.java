package MVCJuegoEnCurso.vista;

import MVCJuegoEnCurso.controlador.ControladorPartida;
import MVCJuegoEnCurso.modelo.interfaces.IModeloJugadoresLectura;
import MVCJuegoEnCurso.observer.ObservadorJugadores;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import objetosPresentables.JugadorPresentable;

/**
 * Representación gráfica de los jugadores de la partida.
 * @author victoria
 */
public class PnlJugadores extends JPanel implements ObservadorJugadores {

    private List<JugadorPresentable> jugadores;
    private List<PnlJugador> panelesJugadores = new ArrayList<>();
    private IModeloJugadoresLectura modelo;
    private ControladorPartida controlador;
     private final Color COLOR_FONDO = new Color(224, 233, 255);

    public PnlJugadores(IModeloJugadoresLectura modelo, ControladorPartida controlador) {
        initComponents();
        this.modelo = modelo;
        this.controlador = controlador;
        this.jugadores = modelo.getJugadores();
        this.setBackground(COLOR_FONDO);
        mostrarJugadores();
    }

    private void mostrarJugadores() {
        removeAll();
        panelesJugadores.clear();

        for (JugadorPresentable jugador : jugadores) {
            PnlJugador panel = new PnlJugador(jugador);
            panelesJugadores.add(panel);
            add(panel);
        }

        revalidate();
        repaint();
    }

    @Override
    public void actualizar(List<JugadorPresentable> jugadores) {
        this.jugadores = jugadores;

        for (int i = 0; i < panelesJugadores.size(); i++) {
            panelesJugadores.get(i).setJugador(jugadores.get(i));
            panelesJugadores.get(i).cargarDatos();
        }

        revalidate();
        repaint();
    }

    public JugadorPresentable getJugadorEnTurno() {
        for (JugadorPresentable jugador : jugadores) {
            if (jugador.isTurno()) {
                return jugador;
            }
        }
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
